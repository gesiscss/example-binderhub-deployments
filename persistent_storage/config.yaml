binderhub:
  nodeSelector:
    base: worker

  config:
    BinderHub:
      base_url: /services/binder/

  extraEnv:
    - name: PROJECTS_LIMIT_PER_USER
      value: "3"

  extraConfig:
    00-launcher:  |
      from tornado import web
      import json
      import os

      async def check_user_projects(launcher, image, username, server_name, repo_url):
          # we are making request to API with admin token
          resp = await launcher.api_request(
              'projects/%s' % username,
              method='GET',
          )
          body = json.loads(resp.body.decode('utf-8'))
          projects = body['projects']
          projects_limit = int(os.getenv('PROJECTS_LIMIT_PER_USER', 0))
          if projects_limit > 0 and projects:
            projects_repo_list = [p[0] for p in projects]
            if repo_url not in projects_repo_list and len(projects) >= projects_limit:
                raise web.HTTPError(409, "No more than {} projects is allowed. "
                                         "One must be deleted before a new project can be created.".format(projects_limit))
      c.Launcher.pre_launch_hook = check_user_projects

  jupyterhub:
    hub:
      templateVars:
        projects_limit: "3"
        announcement_home: "User has to go to <a href='https://notebooks-test.gesis.org/services/binder/' target='_blank'>https://notebooks-test.gesis.org/services/binder/</a> and confirm that Binder service can identify the user with user's JupyterHub account (A service is attempting to authorize with your JupyterHub account). Otherwise nothing works in this page."
      extraVolumes:
        - name: hub-templates
          configMap:
            name: hub-templates
        - name: hub-extra-config
          configMap:
            name: hub-extra-config
      extraVolumeMounts:
        - name: hub-templates
          mountPath: /etc/jupyterhub/templates
        - mountPath: /etc/jupyterhub/extra_config.py  # mount where jupyterhub_config.py is, we import it there.
          subPath: extra_config.py
          name: hub-extra-config
      services:
        binder:
          url: http://194.95.75.9:30193  # base worker
          oauth_redirect_uri: "https://notebooks-test.gesis.org/services/binder/oauth_callback"
      templatePaths:
        - "/etc/jupyterhub/templates"
      extraConfig:
        # set pod restart_policy back to default value OnFailure
        neverRestart: |
          c.KubeSpawner.extra_pod_config.update({'restart_policy': 'OnFailure'})
        binder: |
          from extra_config import BinderSpawner, ProjectAPIHandler
          c.JupyterHub.spawner_class = BinderSpawner
          c.JupyterHub.extra_handlers = [(r'/api/projects/([^/]+)', ProjectAPIHandler), ]

    singleuser:
      events: true
      storage:
        type: dynamic
        capacity: 5Gi
      image:
        # https://github.com/gesiscss/data_science_image
        # NOTE: when you update this image, don't forget to update `default_project` attribute of `BinderSpawner` in extra_config.py
        name: gesiscss/singleuser-orc
        tag: "r2d-dd93b3e"
